/*
 * File: app/view/RightRejectWindow.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('platform.system.view.RightRejectWindow', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.form.Panel',
        'Ext.form.field.Hidden',
        'Ext.tree.Panel',
        'Ext.tree.View'
    ],

    height: 500,
    width: 450,
    title: '功能互斥',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    layout: {
                        type: 'hbox',
                        align: 'middle',
                        pack: 'end'
                    },
                    items: [
                        {
                            xtype: 'button',
                            iconCls: 'icon-save',
                            text: '保存',
                            listeners: {
                                click: {
                                    fn: me.onBtnSaveClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            iconCls: 'icon-cancel',
                            text: '取消',
                            listeners: {
                                click: {
                                    fn: me.onBtnCancelClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
            items: [
                {
                    xtype: 'form',
                    border: false,
                    height: 442,
                    autoScroll: true,
                    header: false,
                    title: '互斥菜单',
                    items: [
                        {
                            xtype: 'hiddenfield',
                            anchor: '100%',
                            fieldLabel: 'Label',
                            name: 'refId'
                        },
                        {
                            xtype: 'hiddenfield',
                            anchor: '100%',
                            fieldLabel: 'Label',
                            name: 'rightIds'
                        },
                        {
                            xtype: 'treepanel',
                            border: false,
                            autoScroll: true,
                            header: false,
                            title: '树列表',
                            rootVisible: false,
                            viewConfig: {

                            },
                            listeners: {
                                beforerender: {
                                    fn: me.onTreepanelBeforeRender,
                                    single: true,
                                    scope: me
                                }
                            }
                        }
                    ],
                    listeners: {
                        beforerender: {
                            fn: me.onFormBeforeRender,
                            single: true,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onBtnSaveClick: function(button, e, eOpts) {
        var me  = this;
        try{
            var rightIds = [];
            var items = me.treePanel.getSelectionModel().store.data.items;
            Ext.each(items, function()
                     {
                         var nd = this;
                         if(nd.data.checked)
                         {
                             rightIds.push(nd.data.id);
                         }
                     });
            me.form.getForm().findField('rightIds').setValue(rightIds);
            Common.formSubmit({
                url : ctxp+'/system/right/reject/save',
                form:me.form,
                callback : function(result)
                {
                    Ext.Msg.alert('信息提示', '保存成功！');
                    me.close();
                }
            });
        }catch(error){
            Common.show({title:'信息提示',html:error.toString()});
        }
    },

    onBtnCancelClick: function(button, e, eOpts) {
        var me = this;
        me.close();
    },

    onTreepanelBeforeRender: function(component, eOpts) {
        this.treePanel = component;
    },

    onFormBeforeRender: function(component, eOpts) {
        this.form = component;
    },

    loadForm: function(id) {
        var me = this;
        me.form.getForm().findField("refId").setValue(id);
        Common.ajax({
            component : me.treePanel,
            message : '正在加载......',
            url :ctxp + '/system/right/reject/list?id='+id,
            callback : function(result){
                var myStore = Ext.create("Ext.data.TreeStore",{
                    defaultRootId : '',
                    clearOnLoad : true,
                    nodeParam : 'id',
                    fields: [
                        {
                            name: 'id'
                        },
                        {
                            name: 'parentId'
                        },
                        {
                            name: 'sort',
                            type: 'int'
                        },
                        {
                            name: 'iconCls'
                        },
                        {
                            name: 'leaf',
                            type: 'boolean'
                        },
                        {
                            name: 'type'
                        },
                        {
                            name: 'resource'
                        },
                        {
                            name: 'component'
                        },
                        {
                            name: 'text'
                        },
                        {
                            name: 'needCheck',
                            type: 'boolean'
                        },
                        {
                            name: 'checked',
                            type: 'boolean'
                        }
                    ],
                    proxy:
                    {
                        type: 'memory',
                        data: result.rows,
                        reader:{
                            type: 'json'
                        }
                    }
                });

                me.treePanel.bindStore(myStore);
                myStore.reload();
                me.treePanel.expandAll();
                Ext.defer(function()
                          {
                              me.treePanel.expandAll();
                          }, 1000);
            }
        });
    }

});