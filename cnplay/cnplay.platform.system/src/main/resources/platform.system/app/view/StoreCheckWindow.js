/*
 * File: app/view/StoreCheckWindow.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('platform.system.view.StoreCheckWindow', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.form.Panel',
        'Ext.form.field.Hidden',
        'Ext.form.field.Display',
        'Ext.grid.Panel',
        'Ext.grid.column.Column',
        'Ext.grid.View',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    height: 500,
    width: 768,
    resizable: false,
    layout: 'border',
    title: '盘库',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    region: 'center',
                    border: false,
                    layout: 'column',
                    bodyPadding: 10,
                    header: false,
                    title: '编辑机构表单',
                    items: [
                        {
                            xtype: 'hiddenfield',
                            fieldLabel: 'Label',
                            name: 'id'
                        },
                        {
                            xtype: 'hiddenfield',
                            fieldLabel: 'Label',
                            name: 'orgId'
                        },
                        {
                            xtype: 'displayfield',
                            padding: 5,
                            width: 330,
                            fieldLabel: '盘点时间',
                            labelAlign: 'right',
                            name: 'checkDateStr',
                            invalidText: '机构编码不能为空！'
                        },
                        {
                            xtype: 'displayfield',
                            padding: 5,
                            width: 330,
                            fieldLabel: '网点名称',
                            labelAlign: 'right',
                            name: 'orgName',
                            invalidText: '机构名称不能为空！'
                        },
                        {
                            xtype: 'displayfield',
                            padding: 5,
                            width: 330,
                            fieldLabel: '库存总数',
                            labelAlign: 'right',
                            name: 'countStore',
                            invalidText: '机构名称不能为空！'
                        },
                        {
                            xtype: 'displayfield',
                            padding: 5,
                            width: 330,
                            fieldLabel: '盘点总数',
                            labelAlign: 'right',
                            name: 'countCheck',
                            invalidText: '机构名称不能为空！'
                        },
                        {
                            xtype: 'displayfield',
                            padding: 5,
                            width: 671,
                            fieldLabel: '报警信息',
                            labelAlign: 'right',
                            name: 'warnMessage'
                        },
                        {
                            xtype: 'gridpanel',
                            height: 324,
                            width: 736,
                            title: '盘点明细',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'areaName',
                                    text: '存放区'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'sn',
                                    text: '抵押物编号'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'rfid',
                                    text: '标签号'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'name',
                                    text: '抵押物名称'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'storeman',
                                    text: '保管员'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'dywOwner',
                                    text: '抵押物所有人姓名'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if(value==1){
                                            return "正常";
                                        }else {
                                            return "<span style='color:red'>异常</span>";
                                        }
                                    },
                                    align: 'center',
                                    dataIndex: 'checkFlag',
                                    text: '盘点状态'
                                }
                            ],
                            listeners: {
                                render: {
                                    fn: me.onGridpanelRender,
                                    scope: me
                                }
                            }
                        }
                    ],
                    listeners: {
                        afterrender: {
                            fn: me.onFormAfterRender,
                            scope: me
                        }
                    }
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    layout: {
                        type: 'hbox',
                        align: 'middle',
                        pack: 'end'
                    },
                    items: [
                        {
                            xtype: 'button',
                            width: 53,
                            iconCls: 'icon-save',
                            text: '保存',
                            listeners: {
                                click: {
                                    fn: me.onSaveClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            iconCls: 'icon-cancel',
                            text: '取消',
                            listeners: {
                                click: {
                                    fn: me.onCancelClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onFormAfterRender: function(component, eOpts) {
        this.form=component;
    },

    onGridpanelRender: function(component, eOpts) {
        this.grid = component;
    },

    onSaveClick: function(button, e, eOpts) {

        var me = this;
        try{
            Common.formSubmit({
                url : ctxp+'/storeCheck/save',
                form:me.form,
                callback : function(result)
                {
                    Ext.Msg.alert('操作提示', '保存成功！');
                    me.close();
                }
            });
        }catch(error){
            Common.show({title:'操作提示',html:error.toString()});
        }
    },

    onCancelClick: function(button, e, eOpts) {
        var me = this;
        me.close();
    },

    loadForm: function(id) {
        var me = this;
        try{
            Common.ajax({
                component : me.form,
                message : '加载信息...',
                url : ctxp+'/storeCheck/analyse?id='+id,
                callback : function(result)
                {
                    me.form.getForm().reset();
                    me.form.getForm().setValues(result.rows);
                    me.vo = result.rows;
                    Common.loadLocalStore({
                        component:me.grid,
                        fields: ['id', 'sn','rfid','checkFlag','name','areaId','areaName','memo', 'orgId', 'storeman','dywOwner','dywOwnerId','dywId','registerDate',
                         'jkrsfz','jkrxm','jkje','pgje','htEndDate','htStartDate','operator','updateCheckUsername','htId'],
                        data:result.rows.itemList
                    });
                }
            });
        }
        catch(error)
        {
            Common.show({title:'操作提示',html:error.toString()});
        }
    }

});