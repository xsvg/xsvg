/*
 * File: app/view/OrgImportWin.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('platform.system.view.OrgImportWin', {
    extend: 'Ext.window.Window',

    requires: [
        'platform.system.view.OrgImportGridPanel',
        'Ext.grid.Panel',
        'Ext.form.Panel',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    height: 400,
    width: 662,
    resizable: false,
    layout: 'border',
    title: '未导入数据',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'orgimportgridpanel',
                    region: 'west',
                    listeners: {
                        afterrender: {
                            fn: me.onOrgImportGridPanelAfterRender,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'form',
                    region: 'center',
                    border: false,
                    layout: 'column',
                    bodyPadding: 10,
                    header: false,
                    title: '编辑机构表单',
                    listeners: {
                        afterrender: {
                            fn: me.onFormAfterRender,
                            scope: me
                        }
                    }
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    layout: {
                        type: 'hbox',
                        align: 'middle',
                        pack: 'end'
                    },
                    items: [
                        {
                            xtype: 'button',
                            padding: '5 20 5 5',
                            iconCls: 'icon-cancel',
                            text: '确定',
                            listeners: {
                                click: {
                                    fn: me.onCancelClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onOrgImportGridPanelAfterRender: function(component, eOpts) {
        this.orgImportGridPanel=component;
    },

    onFormAfterRender: function(component, eOpts) {
        this.form=component;
    },

    onCancelClick: function(button, e, eOpts) {
        var me = this;
        me.close();
    },

    loadForm: function(result) {

        var me = this;
        me.orgImportGridPanel.loadData(result);

    }

});