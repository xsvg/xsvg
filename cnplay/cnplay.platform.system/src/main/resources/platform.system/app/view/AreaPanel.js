/*
 * File: app/view/AreaPanel.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('platform.system.view.AreaPanel', {
    extend: 'Ext.panel.Panel',

    requires: [
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.tree.Panel',
        'Ext.tree.View',
        'Ext.tree.Column'
    ],

    layout: 'border',
    title: '虚拟机构',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            iconCls: 'icon-add',
                            text: '新增',
                            listeners: {
                                click: {
                                    fn: me.onAddClick,
                                    scope: me
                                },
                                afterrender: {
                                    fn: me.onAddAfterRender,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            iconCls: 'icon-edit',
                            text: '修改',
                            listeners: {
                                click: {
                                    fn: me.onEditClick,
                                    scope: me
                                },
                                afterrender: {
                                    fn: me.onEditAfterRender,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            iconCls: 'icon-del',
                            text: '删除',
                            listeners: {
                                click: {
                                    fn: me.onDelClick,
                                    scope: me
                                },
                                afterrender: {
                                    fn: me.onDelAfterRender,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
            items: [
                {
                    xtype: 'treepanel',
                    region: 'center',
                    border: false,
                    forceFit: true,
                    rootVisible: false,
                    viewConfig: {

                    },
                    columns: [
                        {
                            xtype: 'treecolumn',
                            dataIndex: 'name',
                            text: '机构名称'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'code',
                            text: '机构编码'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'leader',
                            text: '负责人'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'address',
                            text: '机构地址'
                        }
                    ],
                    listeners: {
                        afterrender: {
                            fn: me.onTreePanelAfterRender,
                            single: true,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onAddClick: function(button, e, eOpts) {
        this.showForm('');
    },

    onAddAfterRender: function(component, eOpts) {
        Common.hidden({params : {url:'/system/area/save'},component:component});
    },

    onEditClick: function(button, e, eOpts) {
          var  me =  this.treeGrid;
          var selected = me.getSelectionModel().selected;
        if(selected.items.length >1)
        {
            Ext.Msg.alert('操作提示','只允许选择一个机构进行修改!');
            return;
        }
        else
        {
            var record = selected.items[0];
            if(!Ext.isEmpty(record))
            {
                this.showForm(record.data.id);
            }
            else
            {
                Ext.Msg.alert('操作提示','请选择要修改的机构!');
            }

        }
    },

    onEditAfterRender: function(component, eOpts) {
        Common.hidden({params : {url:'/system/area/save'},component:component});
    },

    onDelClick: function(button, e, eOpts) {
        var me = this;
        Common.ajaxSelectionIds({
            component : me.treeGrid,
            url : ctxp+'/system/area/remove',
            confirm : '确定要删除选中的数据吗？',
            msg : '删除成功',
            callback:function callback(result){
                me.loadTreeGrid();
            }
        });
    },

    onDelAfterRender: function(component, eOpts) {
         Common.hidden({params : {url:'/system/area/remove'},component:component});
    },

    onTreePanelAfterRender: function(component, eOpts) {
        this.treeGrid = component;
        try{

            this.loadTreeGrid();}
        catch(e){

            alert(e.toString());
        }

    },

    loadTreeGrid: function() {
        var me = this;
        Common.bindTree({
            treePanel:me.treeGrid,
            url:ctxp + '/system/area/list',
            pid:'',
            fields:['id','sort','code','name','leader','levelCode','status'],
            onload:function onload(treestore, node, records, successful, eOpts){
                if(records.length>0)
                    Ext.defer(function(){me.treeGrid.expandNode(records[0]);},100);
            }
        });
    },

    showForm: function(id) {
        try
        {
            var me = this;
            var formwin = Ext.create('platform.system.view.AreaWindow');
            formwin.addListener('close', function(panel,opts)
                                {
                                    try{
                                        me.loadTreeGrid();
                                    }catch(ee){}
                                });
            formwin.show();
            formwin.loadForm(id);
        }
        catch(error)
        {
            Common.show({title:'信息提示',html:error.toString()});
        }
    }

});