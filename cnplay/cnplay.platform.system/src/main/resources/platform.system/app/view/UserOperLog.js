/*
 * File: app/view/UserOperLog.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('platform.system.view.UserOperLog', {
    extend: 'Ext.grid.Panel',

    requires: [
        'platform.system.view.DateTegion',
        'Ext.button.Button',
        'Ext.form.Panel',
        'Ext.grid.column.Column',
        'Ext.grid.View',
        'Ext.selection.CheckboxModel',
        'Ext.toolbar.Paging',
        'Ext.form.field.ComboBox'
    ],

    title: '用户管理日志',
    forceFit: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    height: '',
                    items: [
                        {
                            xtype: 'button',
                            iconCls: 'icon-search',
                            text: '查询',
                            listeners: {
                                afterrender: {
                                    fn: me.onBtnSearchAfterRender,
                                    scope: me
                                },
                                click: {
                                    fn: me.onBtnSearchClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            iconCls: 'icon-file',
                            text: '导出',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                },
                {
                    xtype: 'form',
                    dock: 'top',
                    layout: 'column',
                    header: false,
                    title: '查询条件',
                    listeners: {
                        beforerender: {
                            fn: me.onFormBeforeRender,
                            scope: me
                        }
                    },
                    items: [
                        {
                            xtype: 'textfield',
                            margin: 5,
                            width: 270,
                            fieldLabel: '功能名称',
                            labelAlign: 'right',
                            labelWidth: 60,
                            name: 'name'
                        },
                        {
                            xtype: 'DateTegion',
                            label: '日志时间',
                            margin: 5
                        }
                    ]
                },
                {
                    xtype: 'pagingtoolbar',
                    dock: 'bottom',
                    width: 360,
                    afterPageText: '页，共 {0} 页',
                    beforePageText: '第',
                    displayInfo: true,
                    displayMsg: '第 {0} - {1} 行，共 {2} 行',
                    listeners: {
                        beforerender: {
                            fn: me.onPagingtoolbarBeforeRender,
                            single: true,
                            scope: me
                        }
                    },
                    items: [
                        {
                            xtype: 'combobox',
                            width: 120,
                            fieldLabel: '每页行数',
                            labelAlign: 'right',
                            labelWidth: 60,
                            name: 'pageSize',
                            listeners: {
                                beforerender: {
                                    fn: me.onpageSizeBeforRender,
                                    single: true,
                                    scope: me
                                },
                                change: {
                                    fn: me.onComboboxChange,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
            columns: [
                {
                    xtype: 'gridcolumn',
                    width: 150,
                    dataIndex: 'name',
                    text: '功能名称'
                },
                {
                    xtype: 'gridcolumn',
                    width: 150,
                    dataIndex: 'username',
                    text: '被操作用户'
                },
                {
                    xtype: 'gridcolumn',
                    width: 150,
                    dataIndex: 'orgName',
                    text: '机构名称'
                },
                {
                    xtype: 'gridcolumn',
                    width: 150,
                    dataIndex: 'createUsername',
                    text: '操作用户'
                },
                {
                    xtype: 'gridcolumn',
                    width: 150,
                    dataIndex: 'checkUsername',
                    text: '复核用户'
                },
                {
                    xtype: 'gridcolumn',
                    width: 148,
                    dataIndex: 'createTimeStr',
                    text: '日志时间'
                },
                {
                    xtype: 'gridcolumn',
                    width: 150,
                    dataIndex: 'memo',
                    text: '备注'
                }
            ],
            selModel: Ext.create('Ext.selection.CheckboxModel', {

            }),
            listeners: {
                afterrender: {
                    fn: me.onGridpanelAfterRender,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onBtnSearchAfterRender: function(component, eOpts) {
        Common.hidden({params : {url:'/system/log/userLogList'},component:component});
    },

    onBtnSearchClick: function(button, e, eOpts) {

        this.loadGrid();
    },

    onButtonClick: function(button, e, eOpts) {
        try
        {
            //alert(JSON.stringify(params)); {"name":"aa","orgid":"bb"}
            var me=this;
            var strParam=Common.paramStr(me.form.getForm().getValues());
            window.open(ctxp+'/system/log/exportLog?'+encodeURI(encodeURI(strParam)));
            //location.href = ctxp+'/system/log/exportLog?'+encodeURI(encodeURI(strParam));
        }
        catch (error)
        {
            Common.show({title:'操作提示',html:error.toString()});
        }
    },

    onFormBeforeRender: function(component, eOpts) {
        this.form = component;
    },

    onGridpanelAfterRender: function(component, eOpts) {

        this.loadGrid();
    },

    onPagingtoolbarBeforeRender: function(component, eOpts) {
        this.pagingToolbar = component;
    },

    onpageSizeBeforRender: function(component, eOpts) {
        this.pageSize = component;
        Common.bindPageSize(component);
    },

    onComboboxChange: function(field, newValue, oldValue, eOpts) {
        this.loadGrid();
    },

    loadGrid: function() {
        try{
            var me=this;
            var params = me.form.getForm().getValues();
            Common.loadStore({
                component:this,
                url:ctxp + '/system/log/userLogList',
                pageSize:this.pageSize.getValue(),
                fields: ['id', 'name', 'username','createUsername','orgName','checkUsername','memo', 'createTime','createTimeStr','url','argsJson','proceed'],
                params:params
            });
        }catch(ex){
            Common.show({title:'信息提示',html:ex.toString()});
        }
    },

    paramstr: function(jsonobj) {

        var rst='';
        for(var key in jsonobj){
            var vv=jsonobj[key];
            if("undefined"==typeof(vv)){
                vv='';
            }
            rst=rst+ '&' + key + '=' + vv;
        }
        return rst;
    }

});