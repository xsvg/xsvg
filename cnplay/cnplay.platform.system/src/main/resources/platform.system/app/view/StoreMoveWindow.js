/*
 * File: app/view/StoreMoveWindow.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('platform.system.view.StoreMoveWindow', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.form.Panel',
        'Ext.form.field.Date',
        'Ext.form.field.TextArea',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    height: 247,
    width: 445,
    resizable: false,
    layout: 'border',
    title: '抵押物转移',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    region: 'center',
                    border: false,
                    layout: 'column',
                    bodyPadding: 10,
                    header: false,
                    title: '表单',
                    items: [
                        {
                            xtype: 'textfield',
                            padding: 5,
                            width: 330,
                            fieldLabel: '接收人',
                            labelAlign: 'right',
                            name: 'moveto',
                            invalidText: '机构编码不能为空！',
                            allowBlank: false
                        },
                        {
                            xtype: 'textfield',
                            hidden: true,
                            padding: 5,
                            width: 330,
                            fieldLabel: '接收人',
                            labelAlign: 'right',
                            name: 'itemIds',
                            invalidText: '机构编码不能为空！',
                            readOnly: true,
                            allowBlank: false
                        },
                        {
                            xtype: 'datefield',
                            padding: 5,
                            width: 330,
                            fieldLabel: '交接日期',
                            labelAlign: 'right',
                            name: 'moveDates',
                            allowBlank: false,
                            enforceMaxLength: true,
                            maxLength: 50,
                            maxLengthText: '机构名称最大长度不超过50个字符！',
                            editable: false,
                            format: 'Y年m月d日'
                        },
                        {
                            xtype: 'textareafield',
                            padding: 5,
                            width: 330,
                            fieldLabel: '备注',
                            labelAlign: 'right',
                            name: 'memo',
                            enforceMaxLength: true,
                            maxLength: 100,
                            maxLengthText: '备注内容最大长度不超过100个字符！'
                        }
                    ],
                    listeners: {
                        afterrender: {
                            fn: me.onFormAfterRender,
                            scope: me
                        }
                    }
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    layout: {
                        type: 'hbox',
                        align: 'middle',
                        pack: 'end'
                    },
                    items: [
                        {
                            xtype: 'button',
                            width: 53,
                            iconCls: 'icon-save',
                            text: '转移',
                            listeners: {
                                click: {
                                    fn: me.onSaveClick,
                                    scope: me
                                },
                                render: {
                                    fn: me.onButtonRender,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            iconCls: 'icon-cancel',
                            text: '取消',
                            listeners: {
                                click: {
                                    fn: me.onCancelClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onFormAfterRender: function(component, eOpts) {
        this.form=component;
    },

    onSaveClick: function(button, e, eOpts) {

        var me = this;
        try{
            Common.formSubmit({
                url : ctxp+'/store/item/movoto',
                form:me.form,
                callback : function(result)
                {
                    Ext.Msg.alert('操作提示', '保存成功！');
                    me.close();
                }
            });
        }catch(error){
            Common.show({title:'操作提示',html:error.toString()});
        }
    },

    onButtonRender: function(component, eOpts) {
        this.btnSave = component;
    },

    onCancelClick: function(button, e, eOpts) {
        var me = this;
        me.close();
    },

    loadForm: function(ids) {
        var me = this;
        var json = {"itemIds":ids};
        me.form.getForm().reset();
        me.form.getForm().setValues(json);
    }

});