/*
 * File: app/view/RightWindow.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('platform.tools.view.RightWindow', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.form.Panel',
        'Ext.form.field.Hidden',
        'Ext.form.RadioGroup',
        'Ext.form.field.Radio',
        'Ext.form.field.Number',
        'Ext.Img',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    height: 245,
    width: 500,
    layout: 'border',
    title: '功能编辑',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    region: 'center',
                    border: false,
                    bodyPadding: 10,
                    title: '',
                    items: [
                        {
                            xtype: 'hiddenfield',
                            anchor: '100%',
                            fieldLabel: 'Label',
                            name: 'id'
                        },
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            fieldLabel: '功能名称',
                            labelAlign: 'right',
                            name: 'text',
                            emptyText: '请输入菜单名称',
                            validateBlank: true
                        },
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            fieldLabel: '访问地址',
                            labelAlign: 'right',
                            name: 'url'
                        },
                        {
                            xtype: 'radiogroup',
                            fieldLabel: '是否需复核',
                            labelAlign: 'right',
                            items: [
                                {
                                    xtype: 'radiofield',
                                    name: 'needCheck',
                                    boxLabel: '是',
                                    checked: true,
                                    inputValue: 'true'
                                },
                                {
                                    xtype: 'radiofield',
                                    name: 'needCheck',
                                    boxLabel: '否',
                                    inputValue: 'false'
                                }
                            ]
                        },
                        {
                            xtype: 'radiogroup',
                            fieldLabel: '功能状态',
                            labelAlign: 'right',
                            items: [
                                {
                                    xtype: 'radiofield',
                                    name: 'status',
                                    boxLabel: '正常',
                                    checked: true,
                                    inputValue: 'Normal'
                                },
                                {
                                    xtype: 'radiofield',
                                    name: 'status',
                                    boxLabel: '停用',
                                    inputValue: 'Banned'
                                }
                            ]
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            fieldLabel: '排列顺序',
                            labelAlign: 'right',
                            name: 'sort',
                            value: 1,
                            minValue: 0
                        },
                        {
                            xtype: 'panel',
                            border: false,
                            height: 26,
                            layout: 'border',
                            header: false,
                            title: '显示图标',
                            items: [
                                {
                                    xtype: 'image',
                                    region: 'west',
                                    margin: '',
                                    width: 25,
                                    src: 'static/icons/fam/view.png',
                                    listeners: {
                                        afterrender: {
                                            fn: me.onImageAfterRender,
                                            scope: me
                                        },
                                        render: {
                                            fn: me.onImageRender,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'textfield',
                                    region: 'center',
                                    fieldLabel: '显示图标',
                                    labelAlign: 'right',
                                    labelWidth: 75,
                                    name: 'icon',
                                    listeners: {
                                        focus: {
                                            fn: me.onTextfieldFocus,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        }
                    ],
                    listeners: {
                        afterrender: {
                            fn: me.onFormAfterRender,
                            scope: me
                        }
                    }
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    defaultAlign: 'right',
                    layout: {
                        type: 'hbox',
                        align: 'middle',
                        pack: 'end'
                    },
                    items: [
                        {
                            xtype: 'button',
                            iconCls: 'icon-ok',
                            text: '确 定',
                            listeners: {
                                click: {
                                    fn: me.onBtnOkClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            iconCls: 'icon-cancel',
                            text: '取 消',
                            listeners: {
                                click: {
                                    fn: me.onBtnCancelClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onFormAfterRender: function(component, eOpts) {
            this.form = component;
    },

    onImageAfterRender: function(component, eOpts) {
        this.iconImg = component;
    },

    onImageRender: function(component, eOpts) {

    },

    onTextfieldFocus: function(component, e, eOpts) {
        try{
            var me = this;
            Common.upload({form:me.form,suffix:'png,gif,jpg,bmp,jpeg',callback:function(result){
                var data = result;
                var url = Common.getDownloadURL(data.id);
                me.form.getForm().findField('icon').setValue(url);
                me.iconImg.getEl().dom.src = url;
            }});
        }catch(error){
            Common.show({title:'信息提示',html:error.toString()});
        }
    },

    onBtnOkClick: function(button, e, eOpts) {
        var me = this;
        try{
            Common.formSubmit({
                url : ctxp+'/ptools/right/save',
                form:me.form,
                callback : function(result)
                {
                	me.close();
            	}
        	});
        }catch(error){
            Common.show({title:'信息提示',html:error.toString()});
        }
    },

    onBtnCancelClick: function(button, e, eOpts) {
        this.close();
    },

    loadFormData: function(id) {
        var me = this;
        try{
            Common.ajax({
                component : me.form,
                message : '加载信息...',
                url : ctxp+'/ptools/right/load?id='+id,
                callback : function(result)
                {
                    me.form.getForm().reset();
                    var needCheck = result.rows.needCheck;
                    if(needCheck){
                        result.rows.needCheck = 'true';
                    }else{
                        result.rows.needCheck = 'false';
                    }
                    me.iconImg.getEl().dom.src=result.rows.icon;
                    me.form.getForm().setValues(result.rows);
                }
            });
        }
        catch(error)
        {
            Common.show({title:'信息提示',html:error.toString()});
        }
    }

});